{"ast":null,"code":"var _jsxFileName = \"/Users/chikuokechukwu/Downloads/coding/everysooften/every_so_often/frontend/src/Components/LandingPage/Landing.jsx\",\n  _s = $RefreshSig$();\n// Landing.jsx\nimport React, { useState, useEffect } from 'react';\nimport './Landing.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport elephants from '../Assets/Untitled_Artwork16.PNG';\nimport Contactpopup from '../PopUps/Contactpopup';\nimport AddContactForm from '../Components/AddContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  _s();\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/contacts');\n      setContacts(response.data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n    }\n  };\n  const handleAddContact = () => {\n    fetchContacts(); // Reload contacts after adding a new contact\n    setButtonPopup(false); // Close the popup after adding a new contact\n  };\n  const navigate = useNavigate();\n  const homeReload = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containertwo\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headertwo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"texttwo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"contactButton\",\n              onClick: () => setButtonPopup(true),\n              children: \"Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Contactpopup, {\n              trigger: buttonPopup,\n              setTrigger: setButtonPopup,\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [contact.name, \" - \", contact.frequency]\n                }, contact.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AddContactForm, {\n                onAddContact: handleAddContact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Landing, \"5r5ShwKTwcu9A+PbSrNCwivp0jo=\", false, function () {\n  return [useNavigate];\n});\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","elephants","Contactpopup","AddContactForm","jsxDEV","_jsxDEV","Landing","_s","buttonPopup","setButtonPopup","contacts","setContacts","fetchContacts","response","get","data","error","console","handleAddContact","navigate","homeReload","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","trigger","setTrigger","map","contact","name","frequency","id","onAddContact","_c","$RefreshReg$"],"sources":["/Users/chikuokechukwu/Downloads/coding/everysooften/every_so_often/frontend/src/Components/LandingPage/Landing.jsx"],"sourcesContent":["// Landing.jsx\nimport React, { useState, useEffect } from 'react';\nimport './Landing.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport elephants from '../Assets/Untitled_Artwork16.PNG';\nimport Contactpopup from '../PopUps/Contactpopup';\nimport AddContactForm from '../Components/AddContactForm';\n\nconst Landing = () => {\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/contacts');\n      setContacts(response.data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n    }\n  };\n\n  const handleAddContact = () => {\n    fetchContacts(); // Reload contacts after adding a new contact\n    setButtonPopup(false); // Close the popup after adding a new contact\n  };\n\n  const navigate = useNavigate();\n\n  const homeReload = () => {\n    navigate('/home');\n  };\n\n  return (\n    <div className=\"containertwo\">\n      <div className=\"headertwo\">\n        <div className=\"texttwo\">\n          {/* ... (rest of the code) */}\n          <div className=\"buttons\">\n            <div className=\"contacts\">\n              <button className=\"contactButton\" onClick={() => setButtonPopup(true)}>\n                Contacts\n              </button>\n              <Contactpopup trigger={buttonPopup} setTrigger={setButtonPopup}>\n                {/* Render the list inside Contactpopup */}\n                <ul>\n                  {contacts.map((contact) => (\n                    <li key={contact.id}>\n                      {contact.name} - {contact.frequency}\n                    </li>\n                  ))}\n                </ul>\n                {/* Add the AddContactForm component for adding contacts */}\n                <AddContactForm onAddContact={handleAddContact} />\n              </Contactpopup>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}