{"ast":null,"code":"var _jsxFileName = \"/Users/chacko/Documents/GitHub/every-so-often/frontend/src/Components/LandingPage/Landing.jsx\",\n  _s = $RefreshSig$();\n// Landing.jsx\nimport React, { useState, useEffect } from 'react';\nimport './Landing.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport elephants from '../Assets/Untitled_Artwork16.PNG';\nimport Contactpopup from '../PopUps/Contactpopup';\nimport AddContactForm from '../Additions/AddContactForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  _s();\n  const [buttonPopup, setButtonPopup] = useState(false);\n  //pop up button declaration\n  const [contacts, setContacts] = useState([]);\n  //contact fetching\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get('http://localhost:8081/contacts');\n      setContacts(response.data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n    }\n  };\n  const handleAddContact = async () => {\n    await fetchContacts(); // Await the fetchContacts function\n    setButtonPopup(false); // Close the popup after adding a new contact\n  };\n  //reroute function\n  const navigate = useNavigate();\n  const homeReload = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerLogin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerLogin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textLogin\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"navbar\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"elephantLogo\",\n              src: elephants,\n              alt: \"elephantlogo\",\n              onClick: homeReload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"navBarText\",\n                children: \"Contacts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"navBarText\",\n                children: \"Journal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"navBarText\",\n                children: \"Suggestion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contactButton\",\n              onClick: () => setButtonPopup(true),\n              children: \"Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), buttonPopup && /*#__PURE__*/_jsxDEV(Contactpopup, {\n              trigger: buttonPopup,\n              setTrigger: setButtonPopup,\n              children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [contact.name, \" - \", contact.frequency]\n                }, contact.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(AddContactForm, {\n                onAddContact: handleAddContact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Landing, \"5r5ShwKTwcu9A+PbSrNCwivp0jo=\", false, function () {\n  return [useNavigate];\n});\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","elephants","Contactpopup","AddContactForm","jsxDEV","_jsxDEV","Landing","_s","buttonPopup","setButtonPopup","contacts","setContacts","fetchContacts","response","get","data","error","console","handleAddContact","navigate","homeReload","className","children","id","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","trigger","setTrigger","map","contact","name","frequency","onAddContact","_c","$RefreshReg$"],"sources":["/Users/chacko/Documents/GitHub/every-so-often/frontend/src/Components/LandingPage/Landing.jsx"],"sourcesContent":["// Landing.jsx\nimport React, { useState, useEffect } from 'react';\nimport './Landing.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport elephants from '../Assets/Untitled_Artwork16.PNG';\nimport Contactpopup from '../PopUps/Contactpopup';\nimport AddContactForm from '../Additions/AddContactForm';\n\nconst Landing = () => {\n    const [buttonPopup, setButtonPopup] = useState(false);\n    //pop up button declaration\n    const [contacts, setContacts] = useState([]);\n    //contact fetching\n    useEffect(() => {\n        fetchContacts();\n    }, []);\n\n    const fetchContacts = async () => {\n        try {\n            const response = await axios.get('http://localhost:8081/contacts');\n            setContacts(response.data);\n        } catch (error) {\n            console.error('Error fetching contacts:', error);\n        }\n    };\n\n    const handleAddContact = async () => {\n        await fetchContacts(); // Await the fetchContacts function\n        setButtonPopup(false); // Close the popup after adding a new contact\n    };\n    //reroute function\n    const navigate = useNavigate();\n\n    const homeReload = () => {\n        navigate('/home');\n    };\n\n    return (\n        \n        <div className=\"containerLogin\">\n            <div className=\"headerLogin\">\n                <div className=\"textLogin\">\n                    <nav className=\"navbar\">\n                        <ul>\n                            <img id = \"elephantLogo\" src={elephants} alt=\"elephantlogo\" onClick={homeReload} />\n                            <li>\n                                <a className=\"navBarText\">Contacts</a>\n                            </li>\n                            <li>\n                                <a className=\"navBarText\">Journal</a>\n                            </li>\n                            <li>\n                                <a className=\"navBarText\">Suggestion</a>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div className=\"buttons\">\n                        <div className=\"contacts\">\n                            <div className=\"contactButton\" onClick={() => setButtonPopup(true)}>\n                                Contacts\n                            </div>\n                            {buttonPopup && (\n                                <Contactpopup trigger={buttonPopup} setTrigger={setButtonPopup}>\n                                    {/* Render the list inside Contactpopup */}\n                                    <ul>\n                                        {contacts.map((contact) => (\n                                            <li key={contact.id}>\n                                                {contact.name} - {contact.frequency}\n                                            </li>\n                                        ))}\n                                    </ul>\n                                    {/* Add the AddContactForm component for adding contacts */}\n                                    <AddContactForm onAddContact={handleAddContact} />\n                                </Contactpopup>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Landing;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}