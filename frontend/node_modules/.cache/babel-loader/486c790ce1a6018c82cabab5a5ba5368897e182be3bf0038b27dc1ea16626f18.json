{"ast":null,"code":"var _jsxFileName = \"/Users/chacko/Documents/GitHub/every-so-often/frontend/src/Components/Additions/AddContactForm.jsx\",\n  _s = $RefreshSig$();\n// AddContactForm.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddContactForm = ({\n  onAddContact\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [frequency, setFrequency] = useState('');\n  const handleAddContact = async () => {\n    try {\n      // Parse frequency as an integer\n      const frequencyValue = parseInt(frequency, 10);\n\n      // Ensure data is sent as an object with the correct types\n      await axios.post('http://localhost:8081/addContact', {\n        name,\n        frequency: frequencyValue\n      });\n      onAddContact(); // Trigger the callback to refresh contacts\n    } catch (error) {\n      console.error('Error adding contact:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Frequency\",\n      value: frequency,\n      onChange: e => setFrequency(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddContact,\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AddContactForm, \"sE4FLGqLaSYHGgTGv8iUs8z+XhE=\");\n_c = AddContactForm;\nexport default AddContactForm;\nvar _c;\n$RefreshReg$(_c, \"AddContactForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddContactForm","onAddContact","_s","name","setName","frequency","setFrequency","handleAddContact","frequencyValue","parseInt","post","error","console","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/chacko/Documents/GitHub/every-so-often/frontend/src/Components/Additions/AddContactForm.jsx"],"sourcesContent":["// AddContactForm.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddContactForm = ({ onAddContact }) => {\n    const [name, setName] = useState('');\n    const [frequency, setFrequency] = useState('');\n\n    const handleAddContact = async () => {\n        try {\n            // Parse frequency as an integer\n            const frequencyValue = parseInt(frequency, 10);\n\n            // Ensure data is sent as an object with the correct types\n            await axios.post('http://localhost:8081/addContact', { name, frequency: frequencyValue });\n            onAddContact(); // Trigger the callback to refresh contacts\n        } catch (error) {\n            console.error('Error adding contact:', error);\n        }\n    };\n\n    return (\n        <div className=\"add-contact-form\">\n            <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n            <input type=\"text\" placeholder=\"Frequency\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n            <button onClick={handleAddContact}>Add Contact</button>\n        </div>\n    );\n};\n\nexport default AddContactForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACA;MACA,MAAMC,cAAc,GAAGC,QAAQ,CAACJ,SAAS,EAAE,EAAE,CAAC;;MAE9C;MACA,MAAMR,KAAK,CAACa,IAAI,CAAC,kCAAkC,EAAE;QAAEP,IAAI;QAAEE,SAAS,EAAEG;MAAe,CAAC,CAAC;MACzFP,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7Bf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACC,KAAK,EAAEd,IAAK;MAACe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/FzB,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAEZ,SAAU;MAACa,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9GzB,OAAA;MAAQ0B,OAAO,EAAElB,gBAAiB;MAAAO,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxBIF,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}